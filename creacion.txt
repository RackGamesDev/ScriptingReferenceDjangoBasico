es un framework backend para python que usa el mvc(modelo vista controlador) solo que las vistas se llaman templates y el controlador se llama vista


despues de instalar pip, python3 y django:
django-admin startproject nombre
python manage.py migrate (cada vez que cambie la base de datos)
(crear en la carpeta views.py)
(crear carpeta de templates donde estaran los htmls y declararlo en settings.py)
(crear carpeta de statics donde estaran los archivos estaticos (recursos))
(crear carpeta de layouts donde estaran los pedazos montables de html)
(crear una carpeta para los htmls de cada modulo (ej: datos))
(crear una carpeta forms para los formularios?)
(configurar settings.py)

abrir con: python manage.py runserver


manage.py abre y gestiona el proyecto
db.sqlite3 es la base de datos (puede ser intercambiable por otro motor)
settings.py = ajustes y extensiones
urls.py = diccionario con cada plantilla/vista a las urls

para crear nuevo modulo: python manage.py startapp nombre
para checkear si esta bien instalado: python manage.py check nombre
en este caso la conexion a la base de datos esta en el modulo datos (datos/models.py)
cada vez que se actualice cualquier models.py: python manage.py makemigrations ; python manage.py migrate
para conectar los otros modulos al principal, crear en el modulo urls.py y hacer alli las urls como si nada, y luego vincularlo al urls.py principal

para usar otra base de datos que no sea sqlite3 se cambia en el modulo principal en settings.py en DATABASES (en este caso se cambio a postgresql)
